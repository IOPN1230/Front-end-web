[{"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\index.js":"1","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\serviceWorker.js":"2","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\App.js":"3","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Navbar.js":"4","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Sections\\CreateSections.js":"5","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Home.js":"6","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Sections\\Sections.js":"7","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Maps\\UsersMaps.js":"8","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Sections\\AllSections.js":"9","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\DisplayEditor.js":"10","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Maps\\YourMaps.js":"11","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Objects\\ObjectItem.js":"12","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\AuthorizationSystem.js":"13","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\User.js":"14","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\Actions.js":"15","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\EditorMap\\MAP.js":"16","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\ItemBar\\ItemBar.js":"17","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\ToolBar\\ToolBar.js":"18","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\LoginScreen\\index.jsx":"19","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Objects\\ObjectEdit.js":"20","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\DatabaseConnection.js":"21","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\UserData.js":"22","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\ItemBar\\Item.js":"23","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\CreateSector.js":"24","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\HabitantTool.js":"25","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\BrowserTool.js":"26","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\OfficialTool.js":"27","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\firebase\\firebase.js":"28","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Share.js":"29","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\EditSector.js":"30","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Back.js":"31","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Export.js":"32","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Estimate.js":"33","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Cost.js":"34","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Move.js":"35","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Delete.js":"36","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\ShowDesc.js":"37"},{"size":553,"mtime":1611313470930,"results":"38","hashOfConfig":"39"},{"size":5227,"mtime":1611313470931,"results":"40","hashOfConfig":"39"},{"size":2447,"mtime":1611423460934,"results":"41","hashOfConfig":"39"},{"size":2456,"mtime":1611390967575,"results":"42","hashOfConfig":"39"},{"size":4908,"mtime":1611423460950,"results":"43","hashOfConfig":"39"},{"size":744,"mtime":1611328796706,"results":"44","hashOfConfig":"39"},{"size":3848,"mtime":1611423460950,"results":"45","hashOfConfig":"39"},{"size":4371,"mtime":1611566634590,"results":"46","hashOfConfig":"39"},{"size":4181,"mtime":1611423460950,"results":"47","hashOfConfig":"39"},{"size":849,"mtime":1611566918953,"results":"48","hashOfConfig":"39"},{"size":3844,"mtime":1611423460950,"results":"49","hashOfConfig":"39"},{"size":13182,"mtime":1611532302942,"results":"50","hashOfConfig":"39"},{"size":947,"mtime":1611313470930,"results":"51","hashOfConfig":"39"},{"size":2329,"mtime":1611313470931,"results":"52","hashOfConfig":"39"},{"size":2501,"mtime":1611313470930,"results":"53","hashOfConfig":"39"},{"size":6565,"mtime":1611569590518,"results":"54","hashOfConfig":"39"},{"size":584,"mtime":1611423339337,"results":"55","hashOfConfig":"39"},{"size":1229,"mtime":1611338468419,"results":"56","hashOfConfig":"39"},{"size":2685,"mtime":1611567130244,"results":"57","hashOfConfig":"39"},{"size":5928,"mtime":1611532302942,"results":"58","hashOfConfig":"39"},{"size":395,"mtime":1611313470931,"results":"59","hashOfConfig":"39"},{"size":418,"mtime":1611313470931,"results":"60","hashOfConfig":"39"},{"size":2375,"mtime":1611566800354,"results":"61","hashOfConfig":"39"},{"size":2497,"mtime":1611328796705,"results":"62","hashOfConfig":"39"},{"size":498,"mtime":1611503419828,"results":"63","hashOfConfig":"39"},{"size":356,"mtime":1611313470917,"results":"64","hashOfConfig":"39"},{"size":386,"mtime":1611313470920,"results":"65","hashOfConfig":"39"},{"size":644,"mtime":1611313470929,"results":"66","hashOfConfig":"39"},{"size":718,"mtime":1611313470920,"results":"67","hashOfConfig":"39"},{"size":710,"mtime":1611313470918,"results":"68","hashOfConfig":"39"},{"size":341,"mtime":1611390613233,"results":"69","hashOfConfig":"39"},{"size":2147,"mtime":1611502406622,"results":"70","hashOfConfig":"39"},{"size":750,"mtime":1611313470919,"results":"71","hashOfConfig":"39"},{"size":430,"mtime":1611414175102,"results":"72","hashOfConfig":"39"},{"size":719,"mtime":1611313470919,"results":"73","hashOfConfig":"39"},{"size":711,"mtime":1611313470918,"results":"74","hashOfConfig":"39"},{"size":213,"mtime":1611313470920,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"fkdfv5",{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"78"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"78"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"78"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"78"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"78"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\index.js",[],["160","161"],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\serviceWorker.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\App.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Navbar.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Sections\\CreateSections.js",["162","163"],"/*\r\n    Klasa utwórz sektor - w budowie\r\n */\r\nimport React,{ useState, useRef} from 'react'\r\nimport { ActionsSection } from '../../../service/Actions'\r\nimport { User } from '../../../service/User'\r\nimport './../styles/MAP.css'\r\nimport { Map, TileLayer, FeatureGroup } from 'react-leaflet'\r\nimport 'leaflet/dist/leaflet.css';\r\nimport 'leaflet-draw/dist/leaflet.draw';\r\nimport 'leaflet-draw/dist/leaflet.draw.css'\r\nimport {EditControl} from 'react-leaflet-draw';\r\nimport {Button, Modal, Form, Container} from 'react-bootstrap';\r\nimport './../styles/menu.css'\r\n\r\nconst  CreateSections = () => {\r\n    \r\n    const [mapLayers, setMapLayers] = useState([]);\r\n    const [show, setShow] = useState(false);\r\n\r\n    const handleClose = () => setShow(false);\r\n    const handleShow = () => setShow(true);\r\n    const [name, setName] = useState('');\r\n    const handleName = (e) => setName(e.target.value)\r\n    \r\n    const _onCreate = (e) =>{\r\n        console.log(e);\r\n        \r\n        const {layerType, layer} = e\r\n \r\n        if( layerType === 'polygon'){\r\n            const {_leaflet_id} = layer;\r\n        if(mapLayers.length === 0){\r\n             setMapLayers((layers) =>[\r\n            ...layers,\r\n            {id: _leaflet_id, latlngs: layer.getLatLngs()[0]}\r\n             ])\r\n        }else {\r\n            alert('Mozna zrobić tylko jeden sektor na raz!')\r\n        }\r\n       \r\n        }\r\n\r\n    }\r\n    const _onEdited = (e) =>{\r\n        console.log(e);\r\n        const{ layers: {_layers}} = e\r\n        Object.values(_layers).map(({_leaflet_id, editing}) => {\r\n            setMapLayers((layers) => \r\n            layers.map((l) => l.id === _leaflet_id ? {...l, latlngs: {...editing.latlngs[0]}} : l))\r\n        })\r\n    }\r\n    const _onDeleted = (e) =>{\r\n        console.log(e);\r\n        const{ layers: {_layers}} = e\r\n        Object.values(_layers).map(({_leaflet_id}) =>{\r\n            setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id))\r\n        })\r\n    }\r\n    const onSubmit = (sectorData) => {\r\n        console.log('onsubmit: ' + JSON.stringify(sectorData))\r\n        var today = new Date();\r\n        var date = ('0'+(today.getDate())).slice(-2)+'.'+('0'+(today.getMonth()+1)).slice(-2)+'.'+today.getFullYear();\r\n        if(sectorData.length){\r\n             ActionsSection.createAndSetValue({\"author\":User.getUserData().uid,\"date\": date, \"name\": name, \"data\":sectorData})\r\n             alert('Sektor utworzony.')\r\n             window.location = ('/Sections');\r\n        }else{\r\n            alert('Zaznacz obszar sektora!')\r\n        }\r\n       \r\n        \r\n        handleClose()\r\n    }\r\n    return (\r\n        <Container fluid>\r\n        <div id='mapContainer'>\r\n            <Map\r\n                center={[51.778285, 19.449863]} \r\n                zoom={12} \r\n                style={{ width: '100%', height: '100%'}}\r\n                ref={useRef()}>\r\n               \r\n                <FeatureGroup>\r\n                    <EditControl \r\n                        position=\"topleft\" \r\n                        onCreated={_onCreate} \r\n                        onEdited={_onEdited} \r\n                        onDeleted={_onDeleted}\r\n                        draw={{\r\n                            rectangle:false,\r\n                            polyline:false, \r\n                            circle:false,\r\n                            circlemarker:false,\r\n                            marker:false,\r\n                        }} >\r\n\r\n                    </EditControl>\r\n                </FeatureGroup>\r\n                <TileLayer\r\n                    attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n               />\r\n            </Map>\r\n            \r\n           <div className='buttons'> \r\n               <Button variant=\"primary\"  type='submit' onClick={handleShow}>Utwórz Sektor</Button>\r\n            </div>\r\n            \r\n            <Modal show={show} onHide={handleClose}>\r\n                <Modal.Header closeButton>\r\n                    <Modal.Title>Wpisz nazwę sektora</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form.Group controlId=\"SectorName\">\r\n                        <Form.Label>Nazwa</Form.Label>\r\n                        <Form.Control type=\"name\" onChange={ (e) => handleName(e) }/>\r\n                    </Form.Group>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                     Zamknij\r\n                    </Button>\r\n                    <Button variant=\"primary\" onClick={()=>onSubmit(mapLayers)}>\r\n                     Zapisz\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n            \r\n            </div>\r\n            </Container>\r\n        \r\n        \r\n    )\r\n    \r\n}\r\n\r\nexport default CreateSections\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Home.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Sections\\Sections.js",["164"],"/*\r\n    Klasa wyświetla sektory urzędnika \r\n */\r\nimport React, {Component} from 'react'\r\nimport { Card,  ButtonToolbar, Col, Row } from 'react-bootstrap';\r\nimport {Map, TileLayer} from 'react-leaflet';\r\nimport {ActionsSection} from '../../../service/Actions'\r\nimport './../styles/menu.css'\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport { User } from '../../../service/User'\r\n\r\nclass  Sections extends Component {\r\n    constructor(props ){\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            keys:[],\r\n            value:0,\r\n        }\r\n        ActionsSection.getList().then((list)=>{\r\n            let data= []\r\n            let keys =[]\r\n           \r\n            for (let [key, value] of Object.entries(list)) {\r\n                if (value.author === User.getUserData().uid){\r\n                    data.push(value)\r\n                   keys.push(key)\r\n               }\r\n                //console.log(JSON.stringify(data))\r\n               \r\n            }\r\n            this.setState({data : data});\r\n            this.setState({keys:keys});\r\n       \r\n            //console.log('data w sections: '+ JSON.stringify(data[0].data[0].latlngs[2].lat))\r\n            \r\n        });\r\n    }\r\n    countCenter(which){\r\n        \r\n        let ar=[]\r\n        for (let x of this.state.data[which].data[0].latlngs){\r\n            ar.push(x)\r\n        }\r\n        let lat= (ar[0].lat+ar[2].lat)/2\r\n        let lng= (ar[0].lng+ar[2].lng)/2\r\n        const latlngs2 =[lat, lng]\r\n       // console.log(latlngs2)\r\n        \r\n        return latlngs2\r\n       \r\n    }\r\n\r\n    render(){\r\n        const mapStyles = {\r\n            width: '100%',\r\n            height: '100%',\r\n          };\r\n        \r\n        const newdata = this.state.data.map( (data, index) =>{\r\n        return(\r\n            <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \r\n                <Card.Body>\r\n                    <Row style={{height:'100%'}}>\r\n                        <Col xs='3'>\r\n                            <Map\r\n                                center={this.countCenter(index)}\r\n                                zoom={14} \r\n                                style={mapStyles}\r\n                                scrollWheelZoom={false}>\r\n                                <TileLayer\r\n                                     attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                                \r\n                            </Map>\r\n                        </Col>\r\n                        <Col xs='3'>\r\n                            <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \r\n                        </Col>\r\n                        <Col xs='4' >\r\n                            <Rating name=\"half-rating\" name={data.name} defaultValue={data.rating} precision={0.5}  size=\"large\" \r\n                              />\r\n                        </Col>\r\n                        <Col>\r\n                          <ButtonToolbar>\r\n                                {/* <Button variant='primary'> Edytuj </Button>       */}\r\n                         </ButtonToolbar>\r\n                        </Col>                \r\n                    </Row>   \r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }) \r\n        return (\r\n        <div className='sections'>\r\n            <h3>Przeglądaj sektory</h3>\r\n            <div> {newdata}</div>\r\n        </div>\r\n    )    \r\n        }\r\n\r\n   \r\n}\r\n\r\nexport default Sections\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Maps\\UsersMaps.js",["165","166","167"],"/*\r\n    Klasa wyświetla mapy użytkowników - dostępne tylko dla urzędnika\r\n */\r\nimport React, {Component} from 'react'\r\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\r\nimport {Map, TileLayer} from 'react-leaflet';\r\nimport {ActionsMap} from '../../../service/Actions';\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport { keys } from '@material-ui/core/styles/createBreakpoints';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport { instanceOf } from 'prop-types';\r\n\r\nimport './../styles/menu.css'\r\n\r\nclass usersMaps extends Component {\r\n    static propTypes = {\r\n        cookies: instanceOf(Cookies).isRequired\r\n    };\r\n\r\n    constructor(props ){\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            keys: []\r\n        }\r\n        ActionsMap.getList().then((list)=>{\r\n            let data= []\r\n            let keys =[]\r\n           \r\n            for (let [key, value] of Object.entries(list)) {\r\n                data.push(value)\r\n                keys.push(key)\r\n                //console.log(JSON.stringify(data))\r\n            }\r\n            this.setState({data : data});\r\n            this.setState({keys:keys});\r\n            \r\n        });\r\n    }\r\n    countCenter(which){\r\n        \r\n        \r\n        let ar=[]\r\n        for (let x of this.state.data[which].data[0].latlngs){\r\n            ar.push(x)\r\n        }\r\n        let lat= (ar[0].lat+ar[2].lat)/2\r\n        let lng= (ar[0].lng+ar[2].lng)/2\r\n        const latlngs2 =[lat, lng]\r\n        //console.log(latlngs2)\r\n\r\n        return latlngs2\r\n       \r\n    }\r\n\r\n    addRating(data, value, index) {\r\n        this.state.data[index].rating = value;\r\n        ActionsMap.setValue(this.state.keys[index] ,this.state.data[index]);\r\n        window.location.reload()\r\n    }\r\n\r\n    selectMap(currentMap) {\r\n        console.log(currentMap)\r\n        const { cookies } = this.props;\r\n        cookies.set('currentMapEdit', currentMap, { path: '/' });\r\n        document.location.href = \"/Edytor\";\r\n    }\r\n\r\n   render(){\r\n    const mapStyles = {\r\n        width: '100%',\r\n        height: '100%',\r\n      };\r\n    const newdata = this.state.data.map( (data, index) =>{\r\n        return(\r\n            <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \r\n                <Card.Body>\r\n                    <Row style={{height:'100%'}}>\r\n                        <Col xs='3'>\r\n                            <Map\r\n                            \r\n                                center={this.countCenter(index)} \r\n                                zoom={14} \r\n                                style={mapStyles}\r\n                                scrollWheelZoom={false}>\r\n                                <TileLayer\r\n                                     attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                            </Map>\r\n                        </Col>\r\n                        <Col xs='3'>\r\n                            <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \r\n                        </Col>\r\n                        <Col xs='4' >\r\n                            <Rating name=\"half-rating\" defaultValue={data.rating}  precision={0.5} name={index} size=\"large\" \r\n                                onClick = {(e) => this.addRating(data, e.target.value, index)}\r\n                            />\r\n                        </Col>\r\n                        <Col>\r\n                          <ButtonToolbar>\r\n                                <Button variant='primary' onClick={() => this.selectMap(data)}> Pokaż </Button>     \r\n                         </ButtonToolbar>\r\n                        </Col>                \r\n                    </Row>   \r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }) \r\n        return (\r\n        <div className='usersMaps'>\r\n            <h3>Mapy użytkowników</h3>\r\n            <div>{newdata}</div>\r\n        </div>\r\n    )\r\n   }\r\n   \r\n}\r\n\r\nexport default withCookies(usersMaps)","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Sections\\AllSections.js",["168"],"/*\r\n    Klasa wyświetla sektory urzędnika \r\n */\r\nimport React, {Component} from 'react'\r\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\r\nimport {Map, TileLayer} from 'react-leaflet';\r\nimport {ActionsSection} from '../../../service/Actions'\r\nimport './../styles/menu.css'\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport { withCookies, Cookies } from 'react-cookie';\r\nimport { instanceOf } from 'prop-types';\r\n\r\nclass AllSections extends Component {\r\n    static propTypes = {\r\n        cookies: instanceOf(Cookies).isRequired\r\n    };\r\n\r\n    constructor(props ){\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: [],\r\n            keys:[],\r\n            value:0,\r\n        }\r\n        ActionsSection.getList().then((list)=>{\r\n            let data= []\r\n            let keys =[]\r\n           \r\n            for (let [key, value] of Object.entries(list)) {\r\n               \r\n                data.push(value)\r\n                keys.push(key)\r\n                //console.log(JSON.stringify(data))\r\n               \r\n            }\r\n            this.setState({data : data});\r\n            this.setState({keys:keys});\r\n       \r\n            //console.log('data w sections: '+ JSON.stringify(data[0].data[0].latlngs[2].lat))\r\n            \r\n        });\r\n    }\r\n    countCenter(which){\r\n        \r\n        let ar=[]\r\n        for (let x of this.state.data[which].data[0].latlngs){\r\n            ar.push(x)\r\n        }\r\n        let lat= (ar[0].lat+ar[2].lat)/2\r\n        let lng= (ar[0].lng+ar[2].lng)/2\r\n        const latlngs2 =[lat, lng]\r\n       // console.log(latlngs2)\r\n\r\n        return latlngs2\r\n       \r\n    }\r\n\r\n    selectMap(currentMap) {\r\n        console.log(currentMap)\r\n        const { cookies } = this.props;\r\n        cookies.set('currentMapEdit', currentMap, { path: '/' });\r\n        document.location.href = \"/Edytor\";\r\n    }\r\n\r\n    render(){\r\n        const mapStyles = {\r\n            width: '100%',\r\n            height: '100%',\r\n        };\r\n        \r\n        const newdata = this.state.data.map( (data, index) =>{\r\n        return(\r\n            <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \r\n                <Card.Body>\r\n                    <Row style={{height:'100%'}}>\r\n                        <Col xs='3'>\r\n                            <Map\r\n                                center={this.countCenter(index)}\r\n                                zoom={14} \r\n                                style={mapStyles}\r\n                                scrollWheelZoom={false}>\r\n                                <TileLayer\r\n                                     attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                                \r\n                            </Map>\r\n                        </Col>\r\n                        <Col xs='3'>\r\n                            <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \r\n                        </Col>\r\n                        <Col xs='4' >\r\n                            <Rating name=\"half-rating\" name={data.name} defaultValue={data.rating} precision={0.5}  size=\"large\" \r\n                              />\r\n                        </Col>\r\n                        <Col>\r\n                          <ButtonToolbar>\r\n                                <Button variant='primary' onClick={() => this.selectMap(data)}> Dodaj </Button>      \r\n                         </ButtonToolbar>\r\n                        </Col>                \r\n                    </Row>   \r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }) \r\n        return (\r\n        <div className='sections'>\r\n            <h3>Rozwiąż nowe mapy</h3>\r\n            <div> {newdata}</div>\r\n        </div>\r\n    )    \r\n        }\r\n\r\n   \r\n}\r\n\r\nexport default withCookies(AllSections)\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\DisplayEditor.js",["169","170","171"],"import React, { useEffect, useState } from 'react'\r\nimport ToolBar from './ToolBar/ToolBar';\r\n// import { BrowserRouter as Router } from 'react-router-dom';\r\nimport MAP from './EditorMap/MAP';\r\nimport { useCookies } from 'react-cookie';\r\nimport ItemBar from './ItemBar/ItemBar';\r\nimport './DisplayEditor.css'\r\n\r\nfunction DisplayEditor(props) {\r\n  const [cookies, setCookie] = useCookies();\r\n  const [userType, setUserType] = useState('')\r\n\r\n  useEffect(() => {\r\n    setCookie('selectedObject', {name: ''})\r\n  }, [])\r\n\r\n  return (\r\n    <div className=\"DisplayEditor\">\r\n      {/* <Router> */}\r\n      <ToolBar id={0}/>\r\n      <MAP id={props.id} currentMapEdit={cookies.currentMapEdit}/>\r\n      { cookies.userType === 'citizen' ? <ItemBar/> : null }\r\n      {/* </Router> */}\r\n      {/* <footer /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DisplayEditor","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Maps\\YourMaps.js",["172"],"/*\r\n    Klasa wyświetla mapy danego użytkownika - dostępne tylko dla mieszkańca\r\n */\r\nimport React, {Component} from 'react'\r\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\r\nimport {Map, TileLayer} from 'react-leaflet';\r\nimport {ActionsMap} from '../../../service/Actions';\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport { User } from '../../../service/User'\r\nimport './../styles/menu.css'\r\n\r\nclass YourMaps extends Component {\r\n    constructor(props ){\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            keys: []\r\n        }\r\n        ActionsMap.getList().then((list)=>{\r\n            let data= []\r\n            let keys =[]\r\n           \r\n            for (let [key, value] of Object.entries(list)) {\r\n                if (value.author === User.getUserData().uid){\r\n                     data.push(value)\r\n                    keys.push(key)\r\n                }\r\n                //console.log(JSON.stringify(data))\r\n               \r\n            }\r\n            this.setState({data : data});\r\n            this.setState({keys:keys});\r\n            \r\n        });\r\n    }\r\n    countCenter(which){\r\n        \r\n        \r\n        let ar=[]\r\n        for (let x of this.state.data[which].data[0].latlngs){\r\n            ar.push(x)\r\n        }\r\n        let lat= (ar[0].lat+ar[2].lat)/2\r\n        let lng= (ar[0].lng+ar[2].lng)/2\r\n        const latlngs2 =[lat, lng]\r\n        console.log(latlngs2)\r\n\r\n        return latlngs2\r\n       \r\n    }\r\n\r\n\r\n    render(){\r\n        const mapStyles = {\r\n            width: '100%',\r\n            height: '100%',\r\n          };\r\n        const newdata = this.state.data.map( (data, index) =>{\r\n            return(\r\n                <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \r\n                    <Card.Body>\r\n                        <Row style={{height:'100%'}}>\r\n                            <Col xs='3'>\r\n                                <Map\r\n                                \r\n                                    center={this.countCenter(index)} \r\n                                    zoom={15} \r\n                                    style={mapStyles}\r\n                                    scrollWheelZoom={false}>\r\n                                    <TileLayer\r\n                                         attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                                </Map>\r\n                            </Col>\r\n                            <Col xs='3'>\r\n                                <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\r\n                                <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\r\n                                <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \r\n                            </Col>\r\n                            <Col xs='4' >\r\n                                <Rating name=\"half-rating\" defaultValue={data.rating} name={index}  precision='0.5' size=\"large\" readOnly/>\r\n                            </Col>\r\n                            <Col>\r\n                              <ButtonToolbar>\r\n                                    <Button variant='primary' href=\"edytor\"> Edytuj </Button>     \r\n                             </ButtonToolbar>\r\n                            </Col>                \r\n                        </Row>   \r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        }) \r\n        return (\r\n        <div className=\"yourMaps\">\r\n           <h3>Twoje mapy</h3> \r\n           <div>{newdata}</div>\r\n        </div>\r\n    )\r\n    }\r\n    \r\n}\r\n\r\nexport default YourMaps\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Objects\\ObjectItem.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\AuthorizationSystem.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\User.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\Actions.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\EditorMap\\MAP.js",["173","174","175","176","177","178","179","180","181","182","183"],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\ItemBar\\ItemBar.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\ToolBar\\ToolBar.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\LoginScreen\\index.jsx",["184","185","186","187"],"import React, {useEffect, useRef, useState } from 'react';\r\nimport {Box,Button} from '@material-ui/core';\r\nimport logo from './images/logo192.png'\r\nimport styles from './styles.module.css';\r\nimport { AuthorizationSystem } from '../../service/AuthorizationSystem'\r\nimport { User } from '../../service/User'\r\nimport { useCookies } from 'react-cookie';\r\n\r\nexport default function LoginScreen(props) {\r\n    const [mounted, setMounted] = useState(true)\r\n    const onUserChangedSubscription = useRef(null);\r\n    const [cookies, setCookie] = useCookies(['userType']);\r\n\r\n    useEffect(()=>{\r\n\r\n            onUserChangedSubscription.current = User.onUserChanged.subscribe((user)=>{\r\n                if(user == null) {\r\n                    return;\r\n                }\r\n                setCookie('userType', user.userType);\r\n\r\n                let userData = User.getUserData()\r\n                let userType = null\r\n    \r\n                if (userData) {\r\n                    userType = User.getUserData().userType\r\n                }\r\n    \r\n                props.setAuthenticatedUser(userType)\r\n    \r\n                if(onUserChangedSubscription.current != null) {\r\n                    onUserChangedSubscription.current.unsubscribe()\r\n                    onUserChangedSubscription.current = null\r\n                }\r\n            })\r\n    })\r\n\r\n    const handleCitizenAuthentication = () => {\r\n        AuthorizationSystem.doSigningIn()\r\n    }\r\n\r\n    const handleOfficialAuthentication = () => {\r\n        //alert(\"I'm empty now officialy, but I'm growing officialy :)\")\r\n    }\r\n\r\n    return (\r\n        <Box className={styles.loginScreen + \" container-fluid d-flex justify-content-center align-items-center\"}>\r\n            <Box className={styles['auth-section'] + \" container-fluid d-flex flex-column justify-content-around align-items-center\"}>\r\n                <h1>BaUHInia</h1>\r\n\r\n                <img src={logo} \r\n                     alt=\"BauHlina\" \r\n                     width=\"40%\" />\r\n\r\n                <Button color=\"primary\" \r\n                        variant=\"contained\"\r\n                        onClick={handleCitizenAuthentication}>\r\n\r\n                    <img src={logo} width=\"50\" height=\"50\" alt=\"google\" />\r\n\r\n                    <span style={{marginLeft: '10px'}}>Zaloguj z Google</span>\r\n                </Button>\r\n                {/* <Button onClick={handleOfficialAuthentication}>Zaloguj jako urzędnik</Button> */}\r\n            </Box>\r\n            \r\n            <a className={styles['freepik-link']} \r\n               href='https://www.freepik.com/vectors/background'>\r\n               Background vector created by freepik - www.freepik.com\r\n            </a>\r\n        </Box>\r\n    )\r\n}","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Objects\\ObjectEdit.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\DatabaseConnection.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\UserData.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\ItemBar\\Item.js",["188","189"],"import { Popover } from '@material-ui/core';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { useCookies } from 'react-cookie';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    popover: {\r\n        pointerEvents: 'none',\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(),\r\n    },\r\n}));\r\n\r\nfunction Item({ item }) {\r\n    const [cookies, setCookie] = useCookies();\r\n    const [active, setActive] = useState()\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const classes = useStyles();\r\n\r\n    const handlePopoverOpen = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handlePopoverClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n    const open = Boolean(anchorEl);\r\n\r\n    const selectObject = () => {\r\n        setCookie('selectedObject', item)\r\n        setActive('true')\r\n    }\r\n\r\n    return (\r\n        <div className=\"Item\">\r\n            <img src={item.image} alt={item.name} onClick={() => selectObject()}\r\n                className={cookies.selectedObject.name === item.name ? 'active' : null}\r\n                onMouseEnter={handlePopoverOpen}\r\n                onMouseLeave={handlePopoverClose} />\r\n            <Popover\r\n                id=\"mouse-over-popover\"\r\n                className={classes.popover}\r\n                classes={{\r\n                    paper: classes.paper,\r\n                }}\r\n                open={open}\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                    vertical: 'top',\r\n                    horizontal: 'left',\r\n                }}\r\n                onClose={handlePopoverClose}\r\n                disableRestoreFocus\r\n            >\r\n                <Typography>\r\n                        Nazwa: {item.name} <br/>\r\n                        Cena: {item.price} <br/>\r\n                        Promieniowanie cieplne: {item.emission} <br/>\r\n                        Strata cieplna: {item.heatDecline} <br/>\r\n                        Współczynnik przewodnictwa ciepła: {item.heatConducton} <br/>\r\n                </Typography>\r\n            </Popover>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\CreateSector.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\HabitantTool.js",["190","191","192"],"import React from 'react'\r\nimport Delete from './Delete'\r\nimport Back from './Back'\r\nimport Cost from './Cost'\r\nimport Estimate from './Estimate'\r\nimport Export from './Export'\r\nimport Move from './Move'\r\nimport { useCookies } from 'react-cookie';\r\n\r\nfunction HabitantTool() {\r\n    const [cookies] = useCookies();\r\n\r\n    return (\r\n        <div>\r\n            <Back />\r\n            <Export />\r\n            <Cost total={cookies.currentCost}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HabitantTool\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\BrowserTool.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\OfficialTool.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\firebase\\firebase.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Share.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\EditSector.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Back.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Export.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Estimate.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Cost.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Move.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Delete.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\ShowDesc.js",[],{"ruleId":"193","replacedBy":"194"},{"ruleId":"195","replacedBy":"196"},{"ruleId":"197","severity":1,"message":"198","line":48,"column":61,"nodeType":"199","messageId":"200","endLine":48,"endColumn":63},{"ruleId":"197","severity":1,"message":"198","line":56,"column":52,"nodeType":"199","messageId":"200","endLine":56,"endColumn":54},{"ruleId":"201","severity":1,"message":"202","line":83,"column":56,"nodeType":"203","endLine":83,"endColumn":72},{"ruleId":"204","severity":1,"message":"205","line":9,"column":10,"nodeType":"206","messageId":"207","endLine":9,"endColumn":14},{"ruleId":"208","severity":1,"message":"209","line":57,"column":9,"nodeType":"210","endLine":57,"endColumn":31},{"ruleId":"201","severity":1,"message":"202","line":97,"column":100,"nodeType":"203","endLine":97,"endColumn":112},{"ruleId":"201","severity":1,"message":"202","line":95,"column":56,"nodeType":"203","endLine":95,"endColumn":72},{"ruleId":"204","severity":1,"message":"211","line":11,"column":10,"nodeType":"206","messageId":"207","endLine":11,"endColumn":18},{"ruleId":"204","severity":1,"message":"212","line":11,"column":20,"nodeType":"206","messageId":"207","endLine":11,"endColumn":31},{"ruleId":"213","severity":1,"message":"214","line":15,"column":6,"nodeType":"215","endLine":15,"endColumn":8,"suggestions":"216"},{"ruleId":"201","severity":1,"message":"202","line":81,"column":87,"nodeType":"203","endLine":81,"endColumn":99},{"ruleId":"204","severity":1,"message":"217","line":4,"column":62,"nodeType":"206","messageId":"207","endLine":4,"endColumn":73},{"ruleId":"204","severity":1,"message":"218","line":7,"column":10,"nodeType":"206","messageId":"207","endLine":7,"endColumn":21},{"ruleId":"204","severity":1,"message":"219","line":10,"column":10,"nodeType":"206","messageId":"207","endLine":10,"endColumn":23},{"ruleId":"204","severity":1,"message":"220","line":11,"column":8,"nodeType":"206","messageId":"207","endLine":11,"endColumn":15},{"ruleId":"204","severity":1,"message":"221","line":20,"column":12,"nodeType":"206","messageId":"207","endLine":20,"endColumn":18},{"ruleId":"204","severity":1,"message":"222","line":20,"column":20,"nodeType":"206","messageId":"207","endLine":20,"endColumn":29},{"ruleId":"204","severity":1,"message":"223","line":23,"column":19,"nodeType":"206","messageId":"207","endLine":23,"endColumn":27},{"ruleId":"204","severity":1,"message":"224","line":25,"column":12,"nodeType":"206","messageId":"207","endLine":25,"endColumn":18},{"ruleId":"204","severity":1,"message":"225","line":25,"column":20,"nodeType":"206","messageId":"207","endLine":25,"endColumn":29},{"ruleId":"213","severity":1,"message":"226","line":32,"column":8,"nodeType":"215","endLine":32,"endColumn":10,"suggestions":"227"},{"ruleId":"213","severity":1,"message":"228","line":104,"column":8,"nodeType":"215","endLine":104,"endColumn":20,"suggestions":"229"},{"ruleId":"204","severity":1,"message":"230","line":10,"column":12,"nodeType":"206","messageId":"207","endLine":10,"endColumn":19},{"ruleId":"204","severity":1,"message":"231","line":10,"column":21,"nodeType":"206","messageId":"207","endLine":10,"endColumn":31},{"ruleId":"204","severity":1,"message":"232","line":12,"column":12,"nodeType":"206","messageId":"207","endLine":12,"endColumn":19},{"ruleId":"204","severity":1,"message":"233","line":42,"column":11,"nodeType":"206","messageId":"207","endLine":42,"endColumn":39},{"ruleId":"204","severity":1,"message":"234","line":2,"column":27,"nodeType":"206","messageId":"207","endLine":2,"endColumn":36},{"ruleId":"204","severity":1,"message":"235","line":18,"column":12,"nodeType":"206","messageId":"207","endLine":18,"endColumn":18},{"ruleId":"204","severity":1,"message":"236","line":2,"column":8,"nodeType":"206","messageId":"207","endLine":2,"endColumn":14},{"ruleId":"204","severity":1,"message":"237","line":5,"column":8,"nodeType":"206","messageId":"207","endLine":5,"endColumn":16},{"ruleId":"204","severity":1,"message":"238","line":7,"column":8,"nodeType":"206","messageId":"207","endLine":7,"endColumn":12},"no-native-reassign",["239"],"no-negated-in-lhs",["240"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'keys' is defined but never used.","Identifier","unusedVar","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","'userType' is assigned a value but never used.","'setUserType' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'setCookie'. Either include it or remove the dependency array.","ArrayExpression",["241"],"'withLeaflet' is defined but never used.","'EditControl' is defined but never used.","'EditControler' is defined but never used.","'ToolBar' is defined but never used.","'center' is assigned a value but never used.","'setCenter' is assigned a value but never used.","'setTotal' is assigned a value but never used.","'marker' is assigned a value but never used.","'setMarker' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'setCookie' and 'total'. Either include them or remove the dependency array.",["242"],"React Hook useEffect has missing dependencies: 'calculateTotal' and 'setCookie'. Either include them or remove the dependency array.",["243"],"'mounted' is assigned a value but never used.","'setMounted' is assigned a value but never used.","'cookies' is assigned a value but never used.","'handleOfficialAuthentication' is assigned a value but never used.","'useEffect' is defined but never used.","'active' is assigned a value but never used.","'Delete' is defined but never used.","'Estimate' is defined but never used.","'Move' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"244","fix":"245"},{"desc":"246","fix":"247"},{"desc":"248","fix":"249"},"Update the dependencies array to be: [setCookie]",{"range":"250","text":"251"},"Update the dependencies array to be: [setCookie, total]",{"range":"252","text":"253"},"Update the dependencies array to be: [calculateTotal, markerList, setCookie]",{"range":"254","text":"255"},[512,514],"[setCookie]",[1286,1288],"[setCookie, total]",[4145,4157],"[calculateTotal, markerList, setCookie]"]