[{"/home/vshulhan/_Studying/io/Front-end-web/src/index.js":"1","/home/vshulhan/_Studying/io/Front-end-web/src/App.js":"2","/home/vshulhan/_Studying/io/Front-end-web/src/serviceWorker.js":"3","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/DisplayEditor.js":"4","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/Navbar.js":"5","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/Sections.js":"6","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/CreateSections.js":"7","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/UsersMaps.js":"8","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/ObjectItem.js":"9","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/YourMaps.js":"10","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/Home.js":"11","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/AllSections.js":"12","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/ObjectEdit.js":"13","/home/vshulhan/_Studying/io/Front-end-web/src/components/LoginScreen/index.jsx":"14","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/ToolBar/ToolBar.js":"15","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/EditorMap/MAP.js":"16","/home/vshulhan/_Studying/io/Front-end-web/src/service/User.js":"17","/home/vshulhan/_Studying/io/Front-end-web/src/service/Actions.js":"18","/home/vshulhan/_Studying/io/Front-end-web/src/service/AuthorizationSystem.js":"19","/home/vshulhan/_Studying/io/Front-end-web/src/service/DatabaseConnection.js":"20","/home/vshulhan/_Studying/io/Front-end-web/src/service/UserData.js":"21","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/HabitantTool.js":"22","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/BrowserTool.js":"23","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/OfficialTool.js":"24","/home/vshulhan/_Studying/io/Front-end-web/src/firebase/firebase.js":"25","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Share.js":"26","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/EditSector.js":"27","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/CreateSector.js":"28","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Back.js":"29","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Export.js":"30","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Estimate.js":"31","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Cost.js":"32","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Move.js":"33","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Delete.js":"34","/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/ShowDesc.js":"35"},{"size":536,"mtime":1611264024943,"results":"36","hashOfConfig":"37"},{"size":2335,"mtime":1611315514472,"results":"38","hashOfConfig":"37"},{"size":5086,"mtime":1608497576114,"results":"39","hashOfConfig":"37"},{"size":373,"mtime":1610924136291,"results":"40","hashOfConfig":"37"},{"size":2618,"mtime":1611316652533,"results":"41","hashOfConfig":"37"},{"size":3788,"mtime":1611264024943,"results":"42","hashOfConfig":"37"},{"size":4676,"mtime":1611264024943,"results":"43","hashOfConfig":"37"},{"size":3507,"mtime":1611270686964,"results":"44","hashOfConfig":"37"},{"size":4346,"mtime":1611264024943,"results":"45","hashOfConfig":"37"},{"size":3795,"mtime":1611264024943,"results":"46","hashOfConfig":"37"},{"size":721,"mtime":1611264024943,"results":"47","hashOfConfig":"37"},{"size":3696,"mtime":1611264024943,"results":"48","hashOfConfig":"37"},{"size":5051,"mtime":1611264024943,"results":"49","hashOfConfig":"37"},{"size":2499,"mtime":1611316543053,"results":"50","hashOfConfig":"37"},{"size":1342,"mtime":1608497576110,"results":"51","hashOfConfig":"37"},{"size":1395,"mtime":1610924136291,"results":"52","hashOfConfig":"37"},{"size":2262,"mtime":1611272933063,"results":"53","hashOfConfig":"37"},{"size":2420,"mtime":1611270689528,"results":"54","hashOfConfig":"37"},{"size":912,"mtime":1608497576114,"results":"55","hashOfConfig":"37"},{"size":379,"mtime":1608497576114,"results":"56","hashOfConfig":"37"},{"size":399,"mtime":1608497576114,"results":"57","hashOfConfig":"37"},{"size":462,"mtime":1608497576110,"results":"58","hashOfConfig":"37"},{"size":356,"mtime":1608497576110,"results":"59","hashOfConfig":"37"},{"size":386,"mtime":1608497576110,"results":"60","hashOfConfig":"37"},{"size":624,"mtime":1610924136295,"results":"61","hashOfConfig":"37"},{"size":718,"mtime":1608497576110,"results":"62","hashOfConfig":"37"},{"size":710,"mtime":1608497576110,"results":"63","hashOfConfig":"37"},{"size":782,"mtime":1608497576110,"results":"64","hashOfConfig":"37"},{"size":353,"mtime":1608497576110,"results":"65","hashOfConfig":"37"},{"size":2075,"mtime":1608497576110,"results":"66","hashOfConfig":"37"},{"size":750,"mtime":1608497576110,"results":"67","hashOfConfig":"37"},{"size":396,"mtime":1608497576110,"results":"68","hashOfConfig":"37"},{"size":719,"mtime":1608497576110,"results":"69","hashOfConfig":"37"},{"size":711,"mtime":1608497576110,"results":"70","hashOfConfig":"37"},{"size":213,"mtime":1608497576110,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1rxra5h",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"74"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"74"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"74"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/home/vshulhan/_Studying/io/Front-end-web/src/index.js",[],["148","149"],"/home/vshulhan/_Studying/io/Front-end-web/src/App.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/serviceWorker.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/DisplayEditor.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/Navbar.js",["150","151"],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/Sections.js",["152"],"/*\n    Klasa wyświetla sektory urzędnika \n */\nimport React, {Component} from 'react'\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\nimport {Map, TileLayer} from 'react-leaflet';\nimport {ActionsSection} from './../../service/Actions'\nimport './styles/menu.css'\nimport Rating from '@material-ui/lab/Rating'\nimport { User } from './../../service/User'\n\nclass  Sections extends Component {\n    constructor(props ){\n        super(props);\n        this.state = {\n            showModal : false,\n            requiredItem : 0,\n            data: [],\n            keys:[],\n            value:0,\n        }\n        ActionsSection.getList().then((list)=>{\n            let data= []\n            let keys =[]\n           \n            for (let [key, value] of Object.entries(list)) {\n                if (value.author === User.getUserData().uid){\n                    data.push(value)\n                   keys.push(key)\n               }\n                //console.log(JSON.stringify(data))\n               \n            }\n            this.setState({data : data});\n            this.setState({keys:keys});\n       \n            //console.log('data w sections: '+ JSON.stringify(data[0].data[0].latlngs[2].lat))\n            \n        });\n    }\n    countCenter(which){\n        \n        let ar=[]\n        for (let x of this.state.data[which].data[0].latlngs){\n            ar.push(x)\n        }\n        let lat= (ar[0].lat+ar[2].lat)/2\n        let lng= (ar[0].lng+ar[2].lng)/2\n        const latlngs2 =[lat, lng]\n       // console.log(latlngs2)\n\n        return latlngs2\n       \n    }\n\n    render(){\n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        \n        const newdata = this.state.data.map( (data, index) =>{\n        return(\n            <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \n                <Card.Body>\n                    <Row style={{height:'100%'}}>\n                        <Col xs='3'>\n                            <Map\n                                center={this.countCenter(index)}\n                                zoom={14} \n                                style={mapStyles}\n                                scrollWheelZoom={false}>\n                                <TileLayer\n                                     attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n                                \n                            </Map>\n                        </Col>\n                        <Col xs='3'>\n                            <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \n                        </Col>\n                        <Col xs='4' >\n                            <Rating name=\"half-rating\" name={data.name} defaultValue={data.rating} precision={0.5}  size=\"large\" \n                              />\n                        </Col>\n                        <Col>\n                          <ButtonToolbar>\n                                <Button variant='primary'> Edytuj </Button>      \n                         </ButtonToolbar>\n                        </Col>                \n                    </Row>   \n                </Card.Body>\n            </Card>\n        )\n    }) \n        return (\n        <div className='sections'>\n            <h3>Przeglądaj sektory</h3>\n            <div> {newdata}</div>\n        </div>\n    )    \n        }\n\n   \n}\n\nexport default Sections\n","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/CreateSections.js",["153","154"],"/*\n    Klasa utwórz sektor - w budowie\n */\nimport React,{ useState, useRef} from 'react'\nimport { ActionsSection } from './../../service/Actions'\nimport { User } from './../../service/User'\nimport './styles/MAP.css'\nimport { Map, TileLayer, FeatureGroup } from 'react-leaflet'\nimport 'leaflet/dist/leaflet.css';\nimport 'leaflet-draw/dist/leaflet.draw';\nimport 'leaflet-draw/dist/leaflet.draw.css'\nimport {EditControl} from 'react-leaflet-draw';\nimport {Button, Modal, Form, Container} from 'react-bootstrap';\nimport './styles/menu.css'\n\nconst  CreateSections = () => {\n    \n    const [mapLayers, setMapLayers] = useState([]);\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const [name, setName] = useState('');\n    const handleName = (e) => setName(e.target.value)\n    \n    const _onCreate = (e) =>{\n        console.log(e);\n        \n        const {layerType, layer} = e\n \n        if( layerType === 'polygon'){\n            const {_leaflet_id} = layer;\n        if(mapLayers.length === 0){\n             setMapLayers((layers) =>[\n            ...layers,\n            {id: _leaflet_id, latlngs: layer.getLatLngs()[0]}\n             ])\n        }else {\n            alert('Mozna zrobić tylko jeden sektor na raz!')\n        }\n       \n        }\n\n    }\n    const _onEdited = (e) =>{\n        console.log(e);\n        const{ layers: {_layers}} = e\n        Object.values(_layers).map(({_leaflet_id, editing}) => {\n            setMapLayers((layers) => \n            layers.map((l) => l.id === _leaflet_id ? {...l, latlngs: {...editing.latlngs[0]}} : l))\n        })\n    }\n    const _onDeleted = (e) =>{\n        console.log(e);\n        const{ layers: {_layers}} = e\n        Object.values(_layers).map(({_leaflet_id}) =>{\n            setMapLayers((layers) => layers.filter((l) => l.id !== _leaflet_id))\n        })\n    }\n    const onSubmit = (sectorData) => {\n        console.log('onsubmit: ' + JSON.stringify(sectorData))\n        var today = new Date();\n        var date = ('0'+(today.getDate())).slice(-2)+'.'+('0'+(today.getMonth()+1)).slice(-2)+'.'+today.getFullYear();\n        if(sectorData.length){\n             ActionsSection.createAndSetValue({\"author\":User.getUserData().uid,\"date\": date, \"name\": name, \"data\":sectorData})\n        }else{\n            alert('Zaznacz obszar sektora!')\n        }\n       \n        \n        handleClose()\n    }\n    return (\n        <Container fluid>\n        <div id='mapContainer'>\n            <Map\n                center={[51.778285, 19.449863]} \n                zoom={12} \n                style={{ width: '100%', height: '100%'}}\n                ref={useRef()}>\n               \n                <FeatureGroup>\n                    <EditControl \n                        position=\"topleft\" \n                        onCreated={_onCreate} \n                        onEdited={_onEdited} \n                        onDeleted={_onDeleted}\n                        draw={{\n                            rectangle:false,\n                            polyline:false, \n                            circle:false,\n                            circlemarker:false,\n                            marker:false,\n                        }} >\n\n                    </EditControl>\n                </FeatureGroup>\n                <TileLayer\n                    attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n               />\n            </Map>\n            \n           <div className='buttons'> \n               <Button variant=\"primary\"  type='submit' onClick={handleShow}>Utwórz Sektor</Button>\n            </div>\n            \n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Wpisz nazwę sektora</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    <Form.Group controlId=\"SectorName\">\n                        <Form.Label>Nazwa</Form.Label>\n                        <Form.Control type=\"name\" onChange={ (e) => handleName(e) }/>\n                    </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                     Zamknij\n                    </Button>\n                    <Button variant=\"primary\" onClick={()=>onSubmit(mapLayers)}>\n                     Zapisz\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n            \n            </div>\n            </Container>\n        \n        \n    )\n    \n}\n\nexport default CreateSections\n","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/UsersMaps.js",["155"],"/*\n    Klasa wyświetla mapy użytkowników - dostępne tylko dla urzędnika\n */\nimport React, {Component} from 'react'\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\nimport {Map, TileLayer} from 'react-leaflet';\nimport {ActionsMap} from '../../service/Actions';\nimport Rating from '@material-ui/lab/Rating'\n\n//import './styles/menu.css'\n\nclass usersMaps extends Component {\n    constructor(props ){\n        super(props);\n        this.state = {\n            showModal : false,\n            requiredItem : 0,\n            data: [],\n            keys: []\n        }\n        ActionsMap.getList().then((list)=>{\n            let data= []\n            let keys =[]\n           \n            for (let [key, value] of Object.entries(list)) {\n                data.push(value)\n                keys.push(key)\n                //console.log(JSON.stringify(data))\n               \n            }\n            this.setState({data : data});\n            this.setState({keys:keys});\n            \n        });\n    }\n    countCenter(which){\n        \n        \n        let ar=[]\n        for (let x of this.state.data[which].data[0].latlngs){\n            ar.push(x)\n        }\n        let lat= (ar[0].lat+ar[2].lat)/2\n        let lng= (ar[0].lng+ar[2].lng)/2\n        const latlngs2 =[lat, lng]\n        //console.log(latlngs2)\n\n        return latlngs2\n       \n    }\n\n\n   render(){\n    const mapStyles = {\n        width: '100%',\n        height: '100%',\n      };\n    const newdata = this.state.data.map( (data, index) =>{\n        return(\n            <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \n                <Card.Body>\n                    <Row style={{height:'100%'}}>\n                        <Col xs='3'>\n                            <Map\n                            \n                                center={this.countCenter(index)} \n                                zoom={14} \n                                style={mapStyles}\n                                scrollWheelZoom={false}>\n                                <TileLayer\n                                     attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n                            </Map>\n                        </Col>\n                        <Col xs='3'>\n                            <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \n                        </Col>\n                        <Col xs='4' >\n                            <Rating name=\"half-rating\" defaultValue={data.rating}  precision={0.5} name={index} size=\"large\" />\n                        </Col>\n                        <Col>\n                          <ButtonToolbar>\n                                <Button variant='primary' href=\"edytor\"> Edytuj </Button>     \n                         </ButtonToolbar>\n                        </Col>                \n                    </Row>   \n                </Card.Body>\n            </Card>\n        )\n    }) \n        return (\n        <div className='usersMaps'>\n            <h3>Mapy użytkowników</h3>\n            <div>{newdata}</div>\n        </div>\n    )\n   }\n   \n}\n\nexport default usersMaps\n","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/ObjectItem.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/YourMaps.js",["156"],"/*\n    Klasa wyświetla mapy danego użytkownika - dostępne tylko dla mieszkańca\n */\nimport React, {Component} from 'react'\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\nimport {Map, TileLayer} from 'react-leaflet';\nimport {ActionsMap} from '../../service/Actions';\nimport Rating from '@material-ui/lab/Rating'\nimport { User } from './../../service/User'\n\nimport './styles/menu.css'\nclass YourMaps extends Component {\n    constructor(props ){\n        super(props);\n        this.state = {\n            showModal : false,\n            requiredItem : 0,\n            data: [],\n            keys: []\n        }\n        ActionsMap.getList().then((list)=>{\n            let data= []\n            let keys =[]\n           \n            for (let [key, value] of Object.entries(list)) {\n                if (value.author === User.getUserData().uid){\n                     data.push(value)\n                    keys.push(key)\n                }\n                //console.log(JSON.stringify(data))\n               \n            }\n            this.setState({data : data});\n            this.setState({keys:keys});\n            \n        });\n    }\n    countCenter(which){\n        \n        \n        let ar=[]\n        for (let x of this.state.data[which].data[0].latlngs){\n            ar.push(x)\n        }\n        let lat= (ar[0].lat+ar[2].lat)/2\n        let lng= (ar[0].lng+ar[2].lng)/2\n        const latlngs2 =[lat, lng]\n        console.log(latlngs2)\n\n        return latlngs2\n       \n    }\n\n\n    render(){\n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        const newdata = this.state.data.map( (data, index) =>{\n            return(\n                <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \n                    <Card.Body>\n                        <Row style={{height:'100%'}}>\n                            <Col xs='3'>\n                                <Map\n                                \n                                    center={this.countCenter(index)} \n                                    zoom={15} \n                                    style={mapStyles}\n                                    scrollWheelZoom={false}>\n                                    <TileLayer\n                                         attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n                                </Map>\n                            </Col>\n                            <Col xs='3'>\n                                <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\n                                <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\n                                <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \n                            </Col>\n                            <Col xs='4' >\n                                <Rating name=\"half-rating\" defaultValue={data.rating} name={index}  precision='0.5' size=\"large\" readOnly/>\n                            </Col>\n                            <Col>\n                              <ButtonToolbar>\n                                    <Button variant='primary' href=\"edytor\"> Edytuj </Button>     \n                             </ButtonToolbar>\n                            </Col>                \n                        </Row>   \n                    </Card.Body>\n                </Card>\n            )\n        }) \n        return (\n        <div className=\"yourMaps\">\n           <h3>Twoje mapy</h3> \n           <div>{newdata}</div>\n        </div>\n    )\n    }\n    \n}\n\nexport default YourMaps\n","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/Home.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/AllSections.js",["157"],"/*\n    Klasa wyświetla sektory urzędnika \n */\nimport React, {Component} from 'react'\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\nimport {Map, TileLayer} from 'react-leaflet';\nimport {ActionsSection} from './../../service/Actions'\nimport './styles/menu.css'\nimport Rating from '@material-ui/lab/Rating'\n\n\nclass  AllSections extends Component {\n    constructor(props ){\n        super(props);\n        this.state = {\n            showModal : false,\n            requiredItem : 0,\n            data: [],\n            keys:[],\n            value:0,\n        }\n        ActionsSection.getList().then((list)=>{\n            let data= []\n            let keys =[]\n           \n            for (let [key, value] of Object.entries(list)) {\n               \n                data.push(value)\n                keys.push(key)\n               \n                //console.log(JSON.stringify(data))\n               \n            }\n            this.setState({data : data});\n            this.setState({keys:keys});\n       \n            //console.log('data w sections: '+ JSON.stringify(data[0].data[0].latlngs[2].lat))\n            \n        });\n    }\n    countCenter(which){\n        \n        let ar=[]\n        for (let x of this.state.data[which].data[0].latlngs){\n            ar.push(x)\n        }\n        let lat= (ar[0].lat+ar[2].lat)/2\n        let lng= (ar[0].lng+ar[2].lng)/2\n        const latlngs2 =[lat, lng]\n       // console.log(latlngs2)\n\n        return latlngs2\n       \n    }\n\n    render(){\n        const mapStyles = {\n            width: '100%',\n            height: '100%',\n          };\n        \n        const newdata = this.state.data.map( (data, index) =>{\n        return(\n            <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \n                <Card.Body>\n                    <Row style={{height:'100%'}}>\n                        <Col xs='3'>\n                            <Map\n                                center={this.countCenter(index)}\n                                zoom={14} \n                                style={mapStyles}\n                                scrollWheelZoom={false}>\n                                <TileLayer\n                                     attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\n                                \n                            </Map>\n                        </Col>\n                        <Col xs='3'>\n                            <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \n                        </Col>\n                        <Col xs='4' >\n                            <Rating name=\"half-rating\" name={data.name} defaultValue={data.rating} precision={0.5}  size=\"large\" \n                              />\n                        </Col>\n                        <Col>\n                          <ButtonToolbar>\n                                <Button variant='primary'> Dodaj </Button>      \n                         </ButtonToolbar>\n                        </Col>                \n                    </Row>   \n                </Card.Body>\n            </Card>\n        )\n    }) \n        return (\n        <div className='sections'>\n            <h3>Rozwiąż nowe mapy</h3>\n            <div> {newdata}</div>\n        </div>\n    )    \n        }\n\n   \n}\n\nexport default AllSections\n","/home/vshulhan/_Studying/io/Front-end-web/src/components/Menu/ObjectEdit.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/LoginScreen/index.jsx",["158","159"],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/ToolBar/ToolBar.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/EditorMap/MAP.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/service/User.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/service/Actions.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/service/AuthorizationSystem.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/service/DatabaseConnection.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/service/UserData.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/HabitantTool.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/BrowserTool.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/OfficialTool.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/firebase/firebase.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Share.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/EditSector.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/CreateSector.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Back.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Export.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Estimate.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Cost.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Move.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/Delete.js",[],"/home/vshulhan/_Studying/io/Front-end-web/src/components/Editor/Tool/ShowDesc.js",[],{"ruleId":"160","replacedBy":"161"},{"ruleId":"162","replacedBy":"163"},{"ruleId":"164","severity":1,"message":"165","line":6,"column":10,"nodeType":"166","messageId":"167","endLine":6,"endColumn":19},{"ruleId":"164","severity":1,"message":"168","line":30,"column":11,"nodeType":"166","messageId":"167","endLine":30,"endColumn":18},{"ruleId":"169","severity":1,"message":"170","line":85,"column":56,"nodeType":"171","endLine":85,"endColumn":72},{"ruleId":"172","severity":1,"message":"173","line":48,"column":61,"nodeType":"174","messageId":"175","endLine":48,"endColumn":63},{"ruleId":"172","severity":1,"message":"173","line":56,"column":52,"nodeType":"174","messageId":"175","endLine":56,"endColumn":54},{"ruleId":"169","severity":1,"message":"170","line":81,"column":100,"nodeType":"171","endLine":81,"endColumn":112},{"ruleId":"169","severity":1,"message":"170","line":83,"column":87,"nodeType":"171","endLine":83,"endColumn":99},{"ruleId":"169","severity":1,"message":"170","line":85,"column":56,"nodeType":"171","endLine":85,"endColumn":72},{"ruleId":"164","severity":1,"message":"176","line":9,"column":12,"nodeType":"166","messageId":"167","endLine":9,"endColumn":19},{"ruleId":"164","severity":1,"message":"177","line":9,"column":21,"nodeType":"166","messageId":"167","endLine":9,"endColumn":31},"no-native-reassign",["178"],"no-negated-in-lhs",["179"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'mounted' is assigned a value but never used.","'setMounted' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]