[{"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\index.js":"1","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\App.js":"2","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\serviceWorker.js":"3","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\DisplayEditor.js":"4","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\CreateSections.js":"5","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Navbar.js":"6","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Sections.js":"7","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\UsersMaps.js":"8","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\YourMaps.js":"9","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Home.js":"10","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\ObjectItem.js":"11","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\AllSections.js":"12","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\ObjectEdit.js":"13","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\LoginScreen\\index.jsx":"14","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\ToolBar\\ToolBar.js":"15","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\User.js":"16","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\EditorMap\\MAP.js":"17","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\Actions.js":"18","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\AuthorizationSystem.js":"19","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\DatabaseConnection.js":"20","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\UserData.js":"21","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\HabitantTool.js":"22","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\BrowserTool.js":"23","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\OfficialTool.js":"24","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\firebase\\firebase.js":"25","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Share.js":"26","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\EditSector.js":"27","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\CreateSector.js":"28","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Back.js":"29","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Export.js":"30","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Estimate.js":"31","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Cost.js":"32","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Delete.js":"33","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Move.js":"34","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\ShowDesc.js":"35"},{"size":553,"mtime":1611313470930,"results":"36","hashOfConfig":"37"},{"size":2278,"mtime":1611315700103,"results":"38","hashOfConfig":"37"},{"size":5227,"mtime":1611313470931,"results":"39","hashOfConfig":"37"},{"size":373,"mtime":1611313470914,"results":"40","hashOfConfig":"37"},{"size":4853,"mtime":1611327241318,"results":"41","hashOfConfig":"37"},{"size":2215,"mtime":1611315135774,"results":"42","hashOfConfig":"37"},{"size":3897,"mtime":1611313470927,"results":"43","hashOfConfig":"37"},{"size":3610,"mtime":1611313470928,"results":"44","hashOfConfig":"37"},{"size":3900,"mtime":1611313470928,"results":"45","hashOfConfig":"37"},{"size":760,"mtime":1611313470926,"results":"46","hashOfConfig":"37"},{"size":4468,"mtime":1611313470927,"results":"47","hashOfConfig":"37"},{"size":3805,"mtime":1611313470926,"results":"48","hashOfConfig":"37"},{"size":5207,"mtime":1611327325041,"results":"49","hashOfConfig":"37"},{"size":2295,"mtime":1611327474584,"results":"50","hashOfConfig":"37"},{"size":1342,"mtime":1611313470921,"results":"51","hashOfConfig":"37"},{"size":2329,"mtime":1611313470931,"results":"52","hashOfConfig":"37"},{"size":1395,"mtime":1611313470915,"results":"53","hashOfConfig":"37"},{"size":2501,"mtime":1611313470930,"results":"54","hashOfConfig":"37"},{"size":947,"mtime":1611313470930,"results":"55","hashOfConfig":"37"},{"size":395,"mtime":1611313470931,"results":"56","hashOfConfig":"37"},{"size":418,"mtime":1611313470931,"results":"57","hashOfConfig":"37"},{"size":462,"mtime":1611313470919,"results":"58","hashOfConfig":"37"},{"size":356,"mtime":1611313470917,"results":"59","hashOfConfig":"37"},{"size":386,"mtime":1611313470920,"results":"60","hashOfConfig":"37"},{"size":644,"mtime":1611313470929,"results":"61","hashOfConfig":"37"},{"size":718,"mtime":1611313470920,"results":"62","hashOfConfig":"37"},{"size":710,"mtime":1611313470918,"results":"63","hashOfConfig":"37"},{"size":782,"mtime":1611313470918,"results":"64","hashOfConfig":"37"},{"size":353,"mtime":1611313470917,"results":"65","hashOfConfig":"37"},{"size":2075,"mtime":1611313470919,"results":"66","hashOfConfig":"37"},{"size":750,"mtime":1611313470919,"results":"67","hashOfConfig":"37"},{"size":396,"mtime":1611313470918,"results":"68","hashOfConfig":"37"},{"size":711,"mtime":1611313470918,"results":"69","hashOfConfig":"37"},{"size":719,"mtime":1611313470919,"results":"70","hashOfConfig":"37"},{"size":213,"mtime":1611313470920,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"fkdfv5",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"74"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"74"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\index.js",[],["147","148"],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\App.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\serviceWorker.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\DisplayEditor.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\CreateSections.js",["149","150"],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Navbar.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Sections.js",["151"],"/*\r\n    Klasa wyświetla sektory urzędnika \r\n */\r\nimport React, {Component} from 'react'\r\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\r\nimport {Map, TileLayer} from 'react-leaflet';\r\nimport {ActionsSection} from './../../service/Actions'\r\nimport './styles/menu.css'\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport { User } from './../../service/User'\r\n\r\nclass  Sections extends Component {\r\n    constructor(props ){\r\n        super(props);\r\n        this.state = {\r\n            showModal : false,\r\n            requiredItem : 0,\r\n            data: [],\r\n            keys:[],\r\n            value:0,\r\n        }\r\n        ActionsSection.getList().then((list)=>{\r\n            let data= []\r\n            let keys =[]\r\n           \r\n            for (let [key, value] of Object.entries(list)) {\r\n                if (value.author === User.getUserData().uid){\r\n                    data.push(value)\r\n                   keys.push(key)\r\n               }\r\n                //console.log(JSON.stringify(data))\r\n               \r\n            }\r\n            this.setState({data : data});\r\n            this.setState({keys:keys});\r\n       \r\n            //console.log('data w sections: '+ JSON.stringify(data[0].data[0].latlngs[2].lat))\r\n            \r\n        });\r\n    }\r\n    countCenter(which){\r\n        \r\n        let ar=[]\r\n        for (let x of this.state.data[which].data[0].latlngs){\r\n            ar.push(x)\r\n        }\r\n        let lat= (ar[0].lat+ar[2].lat)/2\r\n        let lng= (ar[0].lng+ar[2].lng)/2\r\n        const latlngs2 =[lat, lng]\r\n       // console.log(latlngs2)\r\n\r\n        return latlngs2\r\n       \r\n    }\r\n\r\n    render(){\r\n        const mapStyles = {\r\n            width: '100%',\r\n            height: '100%',\r\n          };\r\n        \r\n        const newdata = this.state.data.map( (data, index) =>{\r\n        return(\r\n            <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \r\n                <Card.Body>\r\n                    <Row style={{height:'100%'}}>\r\n                        <Col xs='3'>\r\n                            <Map\r\n                                center={this.countCenter(index)}\r\n                                zoom={14} \r\n                                style={mapStyles}\r\n                                scrollWheelZoom={false}>\r\n                                <TileLayer\r\n                                     attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                                \r\n                            </Map>\r\n                        </Col>\r\n                        <Col xs='3'>\r\n                            <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \r\n                        </Col>\r\n                        <Col xs='4' >\r\n                            <Rating name=\"half-rating\" name={data.name} defaultValue={data.rating} precision={0.5}  size=\"large\" \r\n                              />\r\n                        </Col>\r\n                        <Col>\r\n                          <ButtonToolbar>\r\n                                <Button variant='primary'> Edytuj </Button>      \r\n                         </ButtonToolbar>\r\n                        </Col>                \r\n                    </Row>   \r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }) \r\n        return (\r\n        <div className='sections'>\r\n            <h3>Przeglądaj sektory</h3>\r\n            <div> {newdata}</div>\r\n        </div>\r\n    )    \r\n        }\r\n\r\n   \r\n}\r\n\r\nexport default Sections\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\UsersMaps.js",["152"],"/*\r\n    Klasa wyświetla mapy użytkowników - dostępne tylko dla urzędnika\r\n */\r\nimport React, {Component} from 'react'\r\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\r\nimport {Map, TileLayer} from 'react-leaflet';\r\nimport {ActionsMap} from '../../service/Actions';\r\nimport Rating from '@material-ui/lab/Rating'\r\n\r\n//import './styles/menu.css'\r\n\r\nclass usersMaps extends Component {\r\n    constructor(props ){\r\n        super(props);\r\n        this.state = {\r\n            showModal : false,\r\n            requiredItem : 0,\r\n            data: [],\r\n            keys: []\r\n        }\r\n        ActionsMap.getList().then((list)=>{\r\n            let data= []\r\n            let keys =[]\r\n           \r\n            for (let [key, value] of Object.entries(list)) {\r\n                data.push(value)\r\n                keys.push(key)\r\n                //console.log(JSON.stringify(data))\r\n               \r\n            }\r\n            this.setState({data : data});\r\n            this.setState({keys:keys});\r\n            \r\n        });\r\n    }\r\n    countCenter(which){\r\n        \r\n        \r\n        let ar=[]\r\n        for (let x of this.state.data[which].data[0].latlngs){\r\n            ar.push(x)\r\n        }\r\n        let lat= (ar[0].lat+ar[2].lat)/2\r\n        let lng= (ar[0].lng+ar[2].lng)/2\r\n        const latlngs2 =[lat, lng]\r\n        //console.log(latlngs2)\r\n\r\n        return latlngs2\r\n       \r\n    }\r\n\r\n\r\n   render(){\r\n    const mapStyles = {\r\n        width: '100%',\r\n        height: '100%',\r\n      };\r\n    const newdata = this.state.data.map( (data, index) =>{\r\n        return(\r\n            <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \r\n                <Card.Body>\r\n                    <Row style={{height:'100%'}}>\r\n                        <Col xs='3'>\r\n                            <Map\r\n                            \r\n                                center={this.countCenter(index)} \r\n                                zoom={14} \r\n                                style={mapStyles}\r\n                                scrollWheelZoom={false}>\r\n                                <TileLayer\r\n                                     attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                            </Map>\r\n                        </Col>\r\n                        <Col xs='3'>\r\n                            <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \r\n                        </Col>\r\n                        <Col xs='4' >\r\n                            <Rating name=\"half-rating\" defaultValue={data.rating}  precision={0.5} name={index} size=\"large\" />\r\n                        </Col>\r\n                        <Col>\r\n                          <ButtonToolbar>\r\n                                <Button variant='primary' href=\"edytor\"> Edytuj </Button>     \r\n                         </ButtonToolbar>\r\n                        </Col>                \r\n                    </Row>   \r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }) \r\n        return (\r\n        <div className='usersMaps'>\r\n            <h3>Mapy użytkowników</h3>\r\n            <div>{newdata}</div>\r\n        </div>\r\n    )\r\n   }\r\n   \r\n}\r\n\r\nexport default usersMaps\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\YourMaps.js",["153"],"/*\r\n    Klasa wyświetla mapy danego użytkownika - dostępne tylko dla mieszkańca\r\n */\r\nimport React, {Component} from 'react'\r\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\r\nimport {Map, TileLayer} from 'react-leaflet';\r\nimport {ActionsMap} from '../../service/Actions';\r\nimport Rating from '@material-ui/lab/Rating'\r\nimport { User } from './../../service/User'\r\n\r\nimport './styles/menu.css'\r\nclass YourMaps extends Component {\r\n    constructor(props ){\r\n        super(props);\r\n        this.state = {\r\n            showModal : false,\r\n            requiredItem : 0,\r\n            data: [],\r\n            keys: []\r\n        }\r\n        ActionsMap.getList().then((list)=>{\r\n            let data= []\r\n            let keys =[]\r\n           \r\n            for (let [key, value] of Object.entries(list)) {\r\n                if (value.author === User.getUserData().uid){\r\n                     data.push(value)\r\n                    keys.push(key)\r\n                }\r\n                //console.log(JSON.stringify(data))\r\n               \r\n            }\r\n            this.setState({data : data});\r\n            this.setState({keys:keys});\r\n            \r\n        });\r\n    }\r\n    countCenter(which){\r\n        \r\n        \r\n        let ar=[]\r\n        for (let x of this.state.data[which].data[0].latlngs){\r\n            ar.push(x)\r\n        }\r\n        let lat= (ar[0].lat+ar[2].lat)/2\r\n        let lng= (ar[0].lng+ar[2].lng)/2\r\n        const latlngs2 =[lat, lng]\r\n        console.log(latlngs2)\r\n\r\n        return latlngs2\r\n       \r\n    }\r\n\r\n\r\n    render(){\r\n        const mapStyles = {\r\n            width: '100%',\r\n            height: '100%',\r\n          };\r\n        const newdata = this.state.data.map( (data, index) =>{\r\n            return(\r\n                <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \r\n                    <Card.Body>\r\n                        <Row style={{height:'100%'}}>\r\n                            <Col xs='3'>\r\n                                <Map\r\n                                \r\n                                    center={this.countCenter(index)} \r\n                                    zoom={15} \r\n                                    style={mapStyles}\r\n                                    scrollWheelZoom={false}>\r\n                                    <TileLayer\r\n                                         attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                         url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                                </Map>\r\n                            </Col>\r\n                            <Col xs='3'>\r\n                                <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\r\n                                <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\r\n                                <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \r\n                            </Col>\r\n                            <Col xs='4' >\r\n                                <Rating name=\"half-rating\" defaultValue={data.rating} name={index}  precision='0.5' size=\"large\" readOnly/>\r\n                            </Col>\r\n                            <Col>\r\n                              <ButtonToolbar>\r\n                                    <Button variant='primary' href=\"edytor\"> Edytuj </Button>     \r\n                             </ButtonToolbar>\r\n                            </Col>                \r\n                        </Row>   \r\n                    </Card.Body>\r\n                </Card>\r\n            )\r\n        }) \r\n        return (\r\n        <div className=\"yourMaps\">\r\n           <h3>Twoje mapy</h3> \r\n           <div>{newdata}</div>\r\n        </div>\r\n    )\r\n    }\r\n    \r\n}\r\n\r\nexport default YourMaps\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\Home.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\ObjectItem.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\AllSections.js",["154"],"/*\r\n    Klasa wyświetla sektory urzędnika \r\n */\r\nimport React, {Component} from 'react'\r\nimport { Card, Button, ButtonToolbar, Col, Row } from 'react-bootstrap';\r\nimport {Map, TileLayer} from 'react-leaflet';\r\nimport {ActionsSection} from './../../service/Actions'\r\nimport './styles/menu.css'\r\nimport Rating from '@material-ui/lab/Rating'\r\n\r\n\r\nclass  AllSections extends Component {\r\n    constructor(props ){\r\n        super(props);\r\n        this.state = {\r\n            showModal : false,\r\n            requiredItem : 0,\r\n            data: [],\r\n            keys:[],\r\n            value:0,\r\n        }\r\n        ActionsSection.getList().then((list)=>{\r\n            let data= []\r\n            let keys =[]\r\n           \r\n            for (let [key, value] of Object.entries(list)) {\r\n               \r\n                data.push(value)\r\n                keys.push(key)\r\n               \r\n                //console.log(JSON.stringify(data))\r\n               \r\n            }\r\n            this.setState({data : data});\r\n            this.setState({keys:keys});\r\n       \r\n            //console.log('data w sections: '+ JSON.stringify(data[0].data[0].latlngs[2].lat))\r\n            \r\n        });\r\n    }\r\n    countCenter(which){\r\n        \r\n        let ar=[]\r\n        for (let x of this.state.data[which].data[0].latlngs){\r\n            ar.push(x)\r\n        }\r\n        let lat= (ar[0].lat+ar[2].lat)/2\r\n        let lng= (ar[0].lng+ar[2].lng)/2\r\n        const latlngs2 =[lat, lng]\r\n       // console.log(latlngs2)\r\n\r\n        return latlngs2\r\n       \r\n    }\r\n\r\n    render(){\r\n        const mapStyles = {\r\n            width: '100%',\r\n            height: '100%',\r\n          };\r\n        \r\n        const newdata = this.state.data.map( (data, index) =>{\r\n        return(\r\n            <Card style={{ width: '65rem' ,height: '15rem'}} key={index} className=\"p-3\" text=\"dark\"> \r\n                <Card.Body>\r\n                    <Row style={{height:'100%'}}>\r\n                        <Col xs='3'>\r\n                            <Map\r\n                                center={this.countCenter(index)}\r\n                                zoom={14} \r\n                                style={mapStyles}\r\n                                scrollWheelZoom={false}>\r\n                                <TileLayer\r\n                                     attribution='&copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                                     url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"/>\r\n                                \r\n                            </Map>\r\n                        </Col>\r\n                        <Col xs='3'>\r\n                            <Card.Title className='mb-6' style={{fontSize: 26}}>{data.name}</Card.Title>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Data utworzenia:  {data.date}</Card.Subtitle>\r\n                            <Card.Subtitle className='mb-2' style={{fontSize: 10}}>Autor: {data.author}</Card.Subtitle> \r\n                        </Col>\r\n                        <Col xs='4' >\r\n                            <Rating name=\"half-rating\" name={data.name} defaultValue={data.rating} precision={0.5}  size=\"large\" \r\n                              />\r\n                        </Col>\r\n                        <Col>\r\n                          <ButtonToolbar>\r\n                                <Button variant='primary'> Dodaj </Button>      \r\n                         </ButtonToolbar>\r\n                        </Col>                \r\n                    </Row>   \r\n                </Card.Body>\r\n            </Card>\r\n        )\r\n    }) \r\n        return (\r\n        <div className='sections'>\r\n            <h3>Rozwiąż nowe mapy</h3>\r\n            <div> {newdata}</div>\r\n        </div>\r\n    )    \r\n        }\r\n\r\n   \r\n}\r\n\r\nexport default AllSections\r\n","D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Menu\\ObjectEdit.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\LoginScreen\\index.jsx",["155"],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\ToolBar\\ToolBar.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\User.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\EditorMap\\MAP.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\Actions.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\AuthorizationSystem.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\DatabaseConnection.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\service\\UserData.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\HabitantTool.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\BrowserTool.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\OfficialTool.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\firebase\\firebase.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Share.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\EditSector.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\CreateSector.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Back.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Export.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Estimate.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Cost.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Delete.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\Move.js",[],"D:\\GitHub\\IOBahunia\\Front-end-web\\src\\components\\Editor\\Tool\\ShowDesc.js",[],{"ruleId":"156","replacedBy":"157"},{"ruleId":"158","replacedBy":"159"},{"ruleId":"160","severity":1,"message":"161","line":48,"column":61,"nodeType":"162","messageId":"163","endLine":48,"endColumn":63},{"ruleId":"160","severity":1,"message":"161","line":56,"column":52,"nodeType":"162","messageId":"163","endLine":56,"endColumn":54},{"ruleId":"164","severity":1,"message":"165","line":85,"column":56,"nodeType":"166","endLine":85,"endColumn":72},{"ruleId":"164","severity":1,"message":"165","line":81,"column":100,"nodeType":"166","endLine":81,"endColumn":112},{"ruleId":"164","severity":1,"message":"165","line":83,"column":87,"nodeType":"166","endLine":83,"endColumn":99},{"ruleId":"164","severity":1,"message":"165","line":85,"column":56,"nodeType":"166","endLine":85,"endColumn":72},{"ruleId":"167","severity":1,"message":"168","line":32,"column":11,"nodeType":"169","messageId":"170","endLine":32,"endColumn":39},"no-native-reassign",["171"],"no-negated-in-lhs",["172"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","no-unused-vars","'handleOfficialAuthentication' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]